////////////////////////////////////////////////////////////////////////////////////////////////////

package horus

////////////////////////////////////////////////////////////////////////////////////////////////////

import (
	"fmt"
)

////////////////////////////////////////////////////////////////////////////////////////////////////

// LogNotFound returns a NotFoundAction function that logs a
// custom warning message when a resource is not found, providing additional context
// for debugging and structured logging.
func LogNotFound(message string) NotFoundAction {
	return func(address string) error {
		logMessage := fmt.Sprintf(
			"Warning: Data address '%s' not found. Context: %s",
			address,
			message,
		)
		fmt.Println(logMessage)
		return NewCategorizedHerror(
			"log not found",
			"resource_error",
			message,
			nil,
			map[string]any{"address": address},
		)
	}
}

////////////////////////////////////////////////////////////////////////////////////////////////////
